import dotenv from "dotenv";
dotenv.config();

import fs from "fs";
import {
  Client,
  GatewayIntentBits,
  REST,
  Routes,
  SlashCommandBuilder,
  EmbedBuilder,
  ButtonBuilder,
  ButtonStyle,
  ActionRowBuilder,
} from "discord.js";
import express from "express";
import cors from "cors";

const app = express();
app.use(express.json());

// ‚úÖ ‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏ß‡πá‡∏ö‡∏Ç‡∏≠‡∏á‡∏ô‡∏≤‡∏¢‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
const allowedOrigin = "https://roleplayfrom.vercel.app";
app.use(cors({
  origin: allowedOrigin,
  methods: ["POST", "GET"],
}));

const client = new Client({ intents: [GatewayIntentBits.Guilds, GatewayIntentBits.GuildMembers] });

const CONFIG_FILE = "./config.json";
let config = fs.existsSync(CONFIG_FILE) ? JSON.parse(fs.readFileSync(CONFIG_FILE, "utf8")) : {};

function saveConfig() {
  fs.writeFileSync(CONFIG_FILE, JSON.stringify(config, null, 2));
}

// üü¢ ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ö‡∏≠‡∏ó‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå
client.once("ready", () => {
  console.log(`‚úÖ ‡∏ö‡∏≠‡∏ó‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå‡πÅ‡∏•‡πâ‡∏ß‡πÉ‡∏ô‡∏ä‡∏∑‡πà‡∏≠ ${client.user.tag}`);
});

client.login(process.env.BOT_TOKEN)
  .then(() => console.log("‚úÖ Login ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à"))
  .catch(err => console.error("‚ùå Login ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:", err));

// üõ†Ô∏è ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á Slash
const commands = [
  new SlashCommandBuilder()
    .setName("setchannel")
    .setDescription("‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ä‡πà‡∏≠‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ü‡∏≠‡∏£‡πå‡∏°")
    .addChannelOption(opt => opt.setName("channel").setDescription("‡∏ä‡πà‡∏≠‡∏á‡∏™‡∏£‡∏∏‡∏õ").setRequired(true)),

  new SlashCommandBuilder()
    .setName("setannounce")
    .setDescription("‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏ó‡∏±‡∏ô‡∏ó‡∏µ")
    .addChannelOption(opt => opt.setName("channel").setDescription("‡∏ä‡πà‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®").setRequired(true))
    .addStringOption(opt => opt.setName("message").setDescription("‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®").setRequired(true))
    .addStringOption(opt => opt.setName("image").setDescription("‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏£‡∏π‡∏õ/ GIF"))
    .addStringOption(opt => opt.setName("color").setDescription("‡∏™‡∏µ embed ‡πÄ‡∏ä‡πà‡∏ô #FFD700")),

  new SlashCommandBuilder()
    .setName("setsummary")
    .setDescription("‡∏ï‡∏±‡πâ‡∏á template ‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ü‡∏≠‡∏£‡πå‡∏° (‡πÉ‡∏ä‡πâ {OC}, {IC}, {OC_AGE}, {IC_AGE}, {HEIGHT}, {SPECIES}, {DISCORD}, {HISTORY})")
    .addStringOption(opt => opt.setName("message").setDescription("‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏£‡∏∏‡∏õ").setRequired(true)),

  new SlashCommandBuilder()
    .setName("setrole")
    .setDescription("‡∏ï‡∏±‡πâ‡∏á role ‡∏ó‡∏µ‡πà‡∏°‡∏≠‡∏ö‡∏´‡∏•‡∏±‡∏á‡∏Å‡∏£‡∏≠‡∏Å‡∏ü‡∏≠‡∏£‡πå‡∏°")
    .addRoleOption(opt => opt.setName("role").setDescription("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å role").setRequired(true)),

  new SlashCommandBuilder()
    .setName("preview")
    .setDescription("‡∏î‡∏π‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡πÅ‡∏•‡∏∞‡∏™‡∏£‡∏∏‡∏õ"),

  new SlashCommandBuilder()
    .setName("clearsetting")
    .setDescription("‡∏•‡πâ‡∏≤‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ç‡∏≠‡∏á‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü")
].map(cmd => cmd.toJSON());

// ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á
const rest = new REST({ version: "10" }).setToken(process.env.BOT_TOKEN);
(async () => {
  try {
    console.log("üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á...");
    await rest.put(Routes.applicationCommands(process.env.CLIENT_ID), { body: commands });
    console.log("‚úÖ ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÅ‡∏•‡πâ‡∏ß!");
  } catch (err) {
    console.error("‚ùå ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:", err);
  }
})();

// üì¶ ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á Slash
client.on("interactionCreate", async (interaction) => {
  if (!interaction.isChatInputCommand()) return;
  const { commandName, options, guildId } = interaction;

  if (!config[guildId])
    config[guildId] = {
      summaryChannel: null,
      announceChannel: null,
      announceMessage: null,
      summaryMessage: null,
      roleToGive: null,
      embedImage: null,
      embedColor: "#FFD700"
    };

  try {
    if (commandName === "setchannel") {
      const channel = options.getChannel("channel");
      config[guildId].summaryChannel = channel.id;
      saveConfig();
      return interaction.reply({ content: `‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ä‡πà‡∏≠‡∏á‡∏™‡∏£‡∏∏‡∏õ‡πÄ‡∏õ‡πá‡∏ô ${channel}`, ephemeral: true });
    }

    if (commandName === "setannounce") {
      const channel = options.getChannel("channel");
      config[guildId].announceChannel = channel.id;
      config[guildId].announceMessage = options.getString("message");
      config[guildId].embedImage = options.getString("image");
      config[guildId].embedColor = options.getString("color") || "#FFD700";
      saveConfig();

      // ‡∏™‡πà‡∏á‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
      const announceEmbed = new EmbedBuilder()
        .setTitle("üì¢ ‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏ü‡∏≠‡∏£‡πå‡∏°")
        .setDescription(config[guildId].announceMessage)
        .setColor(config[guildId].embedColor);
      if (config[guildId].embedImage) announceEmbed.setImage(config[guildId].embedImage);

      const announceChannel = await client.channels.fetch(config[guildId].announceChannel).catch(()=>null);
      if(announceChannel) await announceChannel.send({ embeds:[announceEmbed] });

      return interaction.reply({ content: `‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢`, ephemeral:true });
    }

    if (commandName === "setsummary") {
      config[guildId].summaryMessage = options.getString("message");
      saveConfig();
      return interaction.reply({ content: `‚úÖ ‡∏ï‡∏±‡πâ‡∏á template ‡∏™‡∏£‡∏∏‡∏õ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢`, ephemeral: true });
    }

    if (commandName === "setrole") {
      const role = options.getRole("role");
      config[guildId].roleToGive = role.id;
      saveConfig();
      return interaction.reply({ content: `‚úÖ ‡∏ï‡∏±‡πâ‡∏á role ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏°‡∏≠‡∏ö‡∏´‡∏•‡∏±‡∏á‡∏Å‡∏£‡∏≠‡∏Å‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÄ‡∏õ‡πá‡∏ô: ${role.name}`, ephemeral: true });
    }

    if (commandName === "preview") {
      const guildConfig = config[guildId];
      const dummy = { OC:"Luna", OC_AGE:"17", IC:"Shiki", IC_AGE:"25", HEIGHT:"175cm", SPECIES:"Furry Fox", DISCORD:"Shiki#1234", HISTORY:"‡∏ô‡∏±‡∏Å‡∏ú‡∏à‡∏ç‡∏†‡∏±‡∏¢"};
      
      const announceEmbed = new EmbedBuilder()
        .setTitle("üì¢ ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®")
        .setDescription(guildConfig.announceMessage || "‡∏Å‡∏£‡∏≠‡∏Å‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£")
        .setColor(guildConfig.embedColor);
      if (guildConfig.embedImage) announceEmbed.setImage(guildConfig.embedImage);

      await interaction.reply({ embeds:[announceEmbed], ephemeral:true });

      if(guildConfig.summaryMessage){
        const summaryEmbed = new EmbedBuilder()
          .setTitle("üìù ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏™‡∏£‡∏∏‡∏õ")
          .setColor(guildConfig.embedColor);
        const fields = guildConfig.summaryMessage.match(/\{(.*?)\}/g);
        fields?.forEach(f => {
          const key = f.replace(/[{}]/g,'');
          summaryEmbed.addFields({ name:key, value:dummy[key]||"‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏", inline:true });
        });
        if(guildConfig.embedImage) summaryEmbed.setImage(guildConfig.embedImage);
        await interaction.followUp({ embeds:[summaryEmbed], ephemeral:true });
      }
    }

    if (commandName === "clearsetting") {
      config[guildId] = {
        summaryChannel: null,
        announceChannel: null,
        announceMessage: null,
        summaryMessage: null,
        roleToGive: null,
        embedImage: null,
        embedColor: "#FFD700"
      };
      saveConfig();
      return interaction.reply({ content:"üßπ ‡∏•‡πâ‡∏≤‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ç‡∏≠‡∏á‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!", ephemeral:true });
    }

  } catch(err){
    console.error(err);
    interaction.reply({ content:"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î!", ephemeral:true });
  }
});

// üì® ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡πÄ‡∏ß‡πá‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏° (‡πÄ‡∏â‡∏û‡∏≤‡∏∞ roleplayfrom.vercel.app ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô)
app.post("/submit", async (req,res)=>{
  try{
    if (req.headers.origin !== allowedOrigin)
      return res.status(403).send("‚ùå ‡πÑ‡∏°‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡∏à‡∏≤‡∏Å‡∏ï‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏ô‡∏µ‡πâ");

    const data = req.body;
    const targetGuildId = Object.keys(config)[0];
    if(!targetGuildId) return res.status(400).send("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå");

    const guildConfig = config[targetGuildId];
    const channel = await client.channels.fetch(guildConfig.summaryChannel).catch(()=>null);
    if(!channel) return res.status(404).send("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡πà‡∏≠‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡∏∏‡∏õ");

    const summaryEmbed = new EmbedBuilder().setTitle("üìù ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà").setColor(guildConfig.embedColor);
    if(guildConfig.summaryMessage){
      const fields = guildConfig.summaryMessage.match(/\{(.*?)\}/g);
      fields?.forEach(f=>{
        const key = f.replace(/[{}]/g,'');
        summaryEmbed.addFields({ name:key, value:data[key.toLowerCase()]||"‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏", inline:true });
      });
    }
    if(guildConfig.embedImage) summaryEmbed.setImage(guildConfig.embedImage);

    await channel.send({ embeds:[summaryEmbed] });

    // üéñÔ∏è ‡∏°‡∏≠‡∏ö Role
    if(guildConfig.roleToGive && data.discord_id){
      const guild = await client.guilds.fetch(targetGuildId);
      await guild.members.fetch();
      const member = guild.members.cache.get(data.discord_id);
      if(member){
        const role = guild.roles.cache.get(guildConfig.roleToGive);
        if(role && !member.roles.cache.has(role.id)) await member.roles.add(role);
      }
    }

    res.send({status:"ok"});
  } catch(err){
    console.error(err);
    res.status(500).send({status:"error", error:err.message});
  }
});

app.listen(5000,()=>console.log("üåê Web API ‡∏£‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏û‡∏≠‡∏£‡πå‡∏ï 5000 ‡πÅ‡∏•‡∏∞‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏Å‡∏±‡∏ö https://roleplayfrom.vercel.app"));