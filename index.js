import dotenv from "dotenv";
dotenv.config();

import fs from "fs";
import {
  Client,
  GatewayIntentBits,
  REST,
  Routes,
  SlashCommandBuilder,
  EmbedBuilder,
  ButtonBuilder,
  ButtonStyle,
  ActionRowBuilder,
  PermissionsBitField,
} from "discord.js";
import express from "express";
import cors from "cors";

const app = express();
app.use(cors());
app.use(express.json());

// üîπ Discord Client
const client = new Client({
  intents: [GatewayIntentBits.Guilds, GatewayIntentBits.GuildMembers],
});

const CONFIG_FILE = "./config.json";
const DEFAULT_URL = "https://roleplayfrom.vercel.app/";
let config = fs.existsSync(CONFIG_FILE)
  ? JSON.parse(fs.readFileSync(CONFIG_FILE, "utf8"))
  : {};

function saveConfig() {
  fs.writeFileSync(CONFIG_FILE, JSON.stringify(config, null, 2));
}

// üîπ ‡∏ö‡∏≠‡∏ó‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå
client.once("ready", () => {
  console.log(`‚úÖ ‡∏ö‡∏≠‡∏ó‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå‡πÅ‡∏•‡πâ‡∏ß‡πÉ‡∏ô‡∏ä‡∏∑‡πà‡∏≠ ${client.user.tag}`);
});

// üîπ Login
client
  .login(process.env.BOT_TOKEN)
  .then(() => console.log("‚úÖ ‡∏ö‡∏≠‡∏ó login ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à"))
  .catch((err) => console.error("‚ùå ‡∏ö‡∏≠‡∏ó login ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:", err));

// üîπ ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
const commands = [
  new SlashCommandBuilder()
    .setName("setchanel")
    .setDescription("‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ä‡πà‡∏≠‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ü‡∏≠‡∏£‡πå‡∏°")
    .addChannelOption(opt =>
      opt.setName("channel").setDescription("‡∏ä‡πà‡∏≠‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡∏∏‡∏õ").setRequired(true)
    ),

  new SlashCommandBuilder()
    .setName("setmessage")
    .setDescription("‡∏ï‡∏±‡πâ‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏õ‡∏∏‡πà‡∏°‡∏ü‡∏≠‡∏£‡πå‡∏°")
    .addChannelOption(opt =>
      opt.setName("channel").setDescription("‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®").setRequired(true)
    )
    .addStringOption(opt =>
      opt.setName("message").setDescription("‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®").setRequired(true)
    )
    .addStringOption(opt =>
      opt.setName("url").setDescription("‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ü‡∏≠‡∏£‡πå‡∏° (‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÉ‡∏™‡πà‡∏à‡∏∞‡πÉ‡∏ä‡πâ default)")
    )
    .addStringOption(opt =>
      opt.setName("image").setDescription("‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏£‡∏π‡∏õ‡∏´‡∏£‡∏∑‡∏≠ GIF")
    )
    .addStringOption(opt =>
      opt.setName("color").setDescription("‡∏™‡∏µ embed ‡πÄ‡∏ä‡πà‡∏ô #ff0000")
    ),

  new SlashCommandBuilder()
    .setName("setrole")
    .setDescription("‡∏ï‡∏±‡πâ‡∏á role ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÉ‡∏´‡πâ‡∏´‡∏•‡∏±‡∏á‡∏Å‡∏£‡∏≠‡∏Å‡∏ü‡∏≠‡∏£‡πå‡∏°")
    .addStringOption(opt =>
      opt.setName("role_name").setDescription("‡∏ä‡∏∑‡πà‡∏≠ role").setRequired(true)
    ),

  new SlashCommandBuilder()
    .setName("setserverid")
    .setDescription("‡∏ï‡∏±‡πâ‡∏á Server ID ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏Å‡∏±‡∏ö‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå")
    .addStringOption(opt =>
      opt.setName("id").setDescription("Server ID ‡∏Ç‡∏≠‡∏á‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡∏ô‡∏µ‡πâ").setRequired(true)
    ),

  new SlashCommandBuilder()
    .setName("serverid")
    .setDescription("‡∏î‡∏π Server ID (‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô)"),

  new SlashCommandBuilder()
    .setName("clearsetting")
    .setDescription("‡∏•‡πâ‡∏≤‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ç‡∏≠‡∏á server ‡∏ô‡∏µ‡πâ"),
].map(cmd => cmd.toJSON());

// ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á
const rest = new REST({ version: "10" }).setToken(process.env.BOT_TOKEN);
(async () => {
  try {
    console.log("üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á...");
    await rest.put(Routes.applicationCommands(process.env.CLIENT_ID), { body: commands });
    console.log("‚úÖ ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÅ‡∏•‡πâ‡∏ß!");
  } catch (err) {
    console.error("‚ùå ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:", err);
  }
})();

// üîπ ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á
client.on("interactionCreate", async (interaction) => {
  if (!interaction.isChatInputCommand()) return;
  const { commandName, options, guildId, guild } = interaction;

  if (!config[guildId])
    config[guildId] = { privateChannel: null, roleToGive: null, embedImage: null, embedColor: "#FFD700", linkedServerId: null };

  try {
    // setchanel
    if (commandName === "setchanel") {
      const channel = options.getChannel("channel");
      config[guildId].privateChannel = channel.id;
      saveConfig();
      await interaction.reply({ content: `‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ä‡πà‡∏≠‡∏á‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏õ‡πá‡∏ô ${channel}`, ephemeral: true });
    }

    // setmessage
    if (commandName === "setmessage") {
      const channel = options.getChannel("channel");
      const messageText = options.getString("message");
      const formUrl = options.getString("url") || DEFAULT_URL;
      const imageUrl = options.getString("image");
      const color = options.getString("color") || "#FFD700";

      const embed = new EmbedBuilder()
        .setTitle("üìã ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£")
        .setDescription(messageText)
        .setColor(color);
      if (imageUrl) embed.setImage(imageUrl);

      const button = new ActionRowBuilder().addComponents(
        new ButtonBuilder()
          .setLabel("üîó ‡∏Å‡∏£‡∏≠‡∏Å‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà")
          .setStyle(ButtonStyle.Link)
          .setURL(formUrl)
      );

      await channel.send({ embeds: [embed], components: [button] });

      config[guildId].embedImage = imageUrl;
      config[guildId].embedColor = color;
      saveConfig();

      await interaction.reply({ content: `‚úÖ ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡∏ó‡∏µ‡πà ${channel}`, ephemeral: true });
    }

    // setrole
    if (commandName === "setrole") {
      const roleName = options.getString("role_name");
      config[guildId].roleToGive = roleName;
      saveConfig();
      await interaction.reply({ content: `‚úÖ ‡∏ï‡∏±‡πâ‡∏á role ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏°‡∏≠‡∏ö‡∏´‡∏•‡∏±‡∏á‡∏Å‡∏£‡∏≠‡∏Å‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÄ‡∏õ‡πá‡∏ô: ${roleName}`, ephemeral: true });
    }

    // setserverid
    if (commandName === "setserverid") {
      if (!interaction.member.permissions.has(PermissionsBitField.Flags.Administrator))
        return interaction.reply({ content: "‚ùå ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô!", ephemeral: true });

      const id = options.getString("id");
      config[guildId].linkedServerId = id;
      saveConfig();
      await interaction.reply({ content: `‚úÖ ‡πÄ‡∏ã‡πá‡∏ï Server ID ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÄ‡∏ß‡πá‡∏ö‡πÄ‡∏õ‡πá‡∏ô: \`${id}\``, ephemeral: true });
    }

    // serverid
    if (commandName === "serverid") {
      if (!interaction.member.permissions.has(PermissionsBitField.Flags.Administrator))
        return interaction.reply({ content: "‚ùå ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô!", ephemeral: true });

      await interaction.reply({
        content: `üÜî Server ID ‡∏Ç‡∏≠‡∏á‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∑‡∏≠: \`${guildId}\``,
        ephemeral: true,
      });
    }

    // clearsetting
    if (commandName === "clearsetting") {
      config[guildId] = { privateChannel: null, roleToGive: null, embedImage: null, embedColor: "#FFD700", linkedServerId: null };
      saveConfig();
      await interaction.reply({ content: "üßπ ‡∏•‡πâ‡∏≤‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ç‡∏≠‡∏á server ‡∏ô‡∏µ‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!", ephemeral: true });
    }
  } catch (err) {
    console.error("‚ùå Error:", err);
    await interaction.reply({ content: "‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î!", ephemeral: true });
  }
});

// üåê ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ü‡∏≠‡∏£‡πå‡∏°
app.post("/submit", async (req, res) => {
  try {
    const data = req.body;
    const serverId = data.server_id; // ‡∏ï‡πâ‡∏≠‡∏á‡∏™‡πà‡∏á‡∏à‡∏≤‡∏Å‡∏ü‡∏≠‡∏£‡πå‡∏°
    if (!serverId) return res.status(400).send("‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ server_id ‡πÉ‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•");

    // ‡∏´‡∏≤ server ‡∏ó‡∏µ‡πà linkedServerId ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö server_id ‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏°‡∏≤
    const targetGuildId = Object.keys(config).find(gid => config[gid].linkedServerId === serverId);
    if (!targetGuildId) return res.status(404).send("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏Å‡∏±‡∏ö Server ID ‡∏ô‡∏µ‡πâ");

    const channelId = config[targetGuildId].privateChannel;
    if (!channelId) return res.status(400).send("‚ùå ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ä‡πà‡∏≠‡∏á‡∏™‡∏£‡∏∏‡∏õ");

    const channel = await client.channels.fetch(channelId).catch(() => null);
    if (!channel) return res.status(404).send("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡πÑ‡∏ß‡πâ");

    const embed = new EmbedBuilder()
      .setTitle("üìù ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£‡πÉ‡∏´‡∏°‡πà")
      .setColor(config[targetGuildId].embedColor || "#A020F0")
      .addFields(
        { name: "‡∏ä‡∏∑‡πà‡∏≠ OC", value: data.oc_name || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏", inline: true },
        { name: "‡∏≠‡∏≤‡∏¢‡∏∏ OC", value: data.oc_age || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏", inline: true },
        { name: "‡∏ä‡∏∑‡πà‡∏≠ IC", value: data.ic_name || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏", inline: true },
        { name: "‡∏≠‡∏≤‡∏¢‡∏∏ IC", value: data.ic_age || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏", inline: true },
        { name: "‡∏™‡πà‡∏ß‡∏ô‡∏™‡∏π‡∏á IC", value: data.ic_height || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏", inline: true },
        { name: "‡∏™‡∏≤‡∏¢‡∏û‡∏±‡∏ô‡∏ò‡∏∏‡πå", value: data.species || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏", inline: true },
        { name: "Discord", value: data.discord_user || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏", inline: true },
        { name: "‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥ IC", value: data.ic_history || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏" }
      )
      .setTimestamp();

    if (config[targetGuildId].embedImage) embed.setImage(config[targetGuildId].embedImage);

    await channel.send({ embeds: [embed] });

    res.send({ status: "ok" });
  } catch (err) {
    console.error("‚ùå Error /submit:", err);
    res.status(500).send({ status: "error", error: err.message });
  }
});

// üåê Start API
app.listen(3000, () => console.log("üåê Web API ‡∏£‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏û‡∏≠‡∏£‡πå‡∏ï 3000"));
