import dotenv from "dotenv";
dotenv.config();

import fs from "fs";
import {
  Client,
  GatewayIntentBits,
  REST,
  Routes,
  SlashCommandBuilder,
  EmbedBuilder,
  ButtonBuilder,
  ButtonStyle,
  ActionRowBuilder,
  PermissionsBitField,
} from "discord.js";
import express from "express";
import cors from "cors";

const app = express();
app.use(cors());
app.use(express.json());

// ЁЯФ╣ Discord Client
const client = new Client({
  intents: [GatewayIntentBits.Guilds, GatewayIntentBits.GuildMembers],
});

const CONFIG_FILE = "./config.json";
const DEFAULT_URL = "https://roleplayfrom.vercel.app/";

let config = fs.existsSync(CONFIG_FILE)
  ? JSON.parse(fs.readFileSync(CONFIG_FILE, "utf8"))
  : {};

function saveConfig() {
  fs.writeFileSync(CONFIG_FILE, JSON.stringify(config, null, 2));
}

// ЁЯФ╣ р╕Ър╕нр╕Чр╕нр╕нр╕Щр╣Др╕ер╕Щр╣М
client.once("ready", () => {
  console.log(`тЬЕ р╕Ър╕нр╕Чр╕нр╕нр╕Щр╣Др╕ер╕Щр╣Мр╣Бр╕ер╣Йр╕зр╣Гр╕Щр╕Кр╕╖р╣Ир╕н ${client.user.tag}`);
});

// ЁЯФ╣ Login
client
  .login(process.env.BOT_TOKEN)
  .then(() => console.log("тЬЕ р╕Ър╕нр╕Ч login р╕кр╕│р╣Ар╕гр╣Зр╕И"))
  .catch((err) => console.error("тЭМ р╕Ър╕нр╕Ч login р╣Др╕бр╣Ир╕кр╕│р╣Ар╕гр╣Зр╕И:", err));

// ЁЯФ╣ р╕Др╕│р╕кр╕▒р╣Ир╕Зр╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф
const commands = [
  new SlashCommandBuilder()
    .setName("setchanel")
    .setDescription("р╕Хр╕▒р╣Йр╕Зр╕Др╣Ир╕▓р╕Кр╣Ир╕нр╕Зр╕кр╕│р╕лр╕гр╕▒р╕Ър╕кр╕гр╕╕р╕Ыр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Яр╕нр╕гр╣Мр╕б")
    .addChannelOption(opt =>
      opt.setName("channel").setDescription("р╕Кр╣Ир╕нр╕Зр╕кр╕│р╕лр╕гр╕▒р╕Ър╕кр╕гр╕╕р╕Ы").setRequired(true)
    ),

  new SlashCommandBuilder()
    .setName("setmessage")
    .setDescription("р╕Хр╕▒р╣Йр╕Зр╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╕Ыр╕гр╕░р╕Бр╕▓р╕ир╕Юр╕гр╣Йр╕нр╕бр╕Ыр╕╕р╣Ир╕бр╕Яр╕нр╕гр╣Мр╕б")
    .addChannelOption(opt =>
      opt.setName("channel").setDescription("р╕Кр╣Ир╕нр╕Зр╕Чр╕╡р╣Ир╕Ир╕░р╕Ыр╕гр╕░р╕Бр╕▓р╕и").setRequired(true)
    )
    .addStringOption(opt =>
      opt.setName("message").setDescription("р╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╕Ыр╕гр╕░р╕Бр╕▓р╕и").setRequired(true)
    )
    .addStringOption(opt =>
      opt.setName("url").setDescription("р╕ер╕┤р╕Зр╕Бр╣Мр╕Яр╕нр╕гр╣Мр╕б (р╕Цр╣Йр╕▓р╣Др╕бр╣Ир╣Гр╕кр╣Ир╕Ир╕░р╣Гр╕Кр╣Й default)")
    )
    .addStringOption(opt =>
      opt.setName("image").setDescription("р╕ер╕┤р╕Зр╕Бр╣Мр╕гр╕╣р╕Ыр╕лр╕гр╕╖р╕н GIF")
    )
    .addStringOption(opt =>
      opt.setName("color").setDescription("р╕кр╕╡ embed р╣Ар╕Кр╣Ир╕Щ #ff0000")
    ),

  new SlashCommandBuilder()
    .setName("setrole")
    .setDescription("р╕Хр╕▒р╣Йр╕З role р╕Чр╕╡р╣Ир╕Ир╕░р╣Гр╕лр╣Йр╕лр╕ер╕▒р╕Зр╕Бр╕гр╕нр╕Бр╕Яр╕нр╕гр╣Мр╕б")
    .addRoleOption(opt =>
      opt.setName("role")
         .setDescription("р╣Ар╕ер╕╖р╕нр╕Б role р╕Чр╕╡р╣Ир╕Ир╕░р╕бр╕нр╕Ъ")
         .setRequired(true)
    ),

  new SlashCommandBuilder()
    .setName("clearsetting")
    .setDescription("р╕ер╣Йр╕▓р╕Зр╕Др╣Ир╕▓р╕Бр╕▓р╕гр╕Хр╕▒р╣Йр╕Зр╕Др╣Ир╕▓р╕Вр╕нр╕З server р╕Щр╕╡р╣Й"),
].map(cmd => cmd.toJSON());

// ЁЯФ╣ р╕ер╕Зр╕Чр╕░р╣Ар╕Ър╕╡р╕вр╕Щр╕Др╕│р╕кр╕▒р╣Ир╕З
const rest = new REST({ version: "10" }).setToken(process.env.BOT_TOKEN);
(async () => {
  try {
    console.log("ЁЯФД р╕Бр╕│р╕ер╕▒р╕Зр╕ер╕Зр╕Чр╕░р╣Ар╕Ър╕╡р╕вр╕Щр╕Др╕│р╕кр╕▒р╣Ир╕З...");
    await rest.put(Routes.applicationCommands(process.env.CLIENT_ID), { body: commands });
    console.log("тЬЕ р╕ер╕Зр╕Чр╕░р╣Ар╕Ър╕╡р╕вр╕Щр╕Др╕│р╕кр╕▒р╣Ир╕Зр╣Бр╕ер╣Йр╕з!");
  } catch (err) {
    console.error("тЭМ р╕ер╕Зр╕Чр╕░р╣Ар╕Ър╕╡р╕вр╕Щр╕Др╕│р╕кр╕▒р╣Ир╕Зр╕ер╣Йр╕бр╣Ар╕лр╕ер╕з:", err);
  }
})();

// ЁЯФ╣ р╕Ир╕▒р╕Фр╕Бр╕▓р╕гр╕Др╕│р╕кр╕▒р╣Ир╕З
client.on("interactionCreate", async (interaction) => {
  if (!interaction.isChatInputCommand()) return;
  const { commandName, options, guildId } = interaction;

  if (!config[guildId])
    config[guildId] = { privateChannel: null, roleToGive: null, embedImage: null, embedColor: "#FFD700" };

  try {
    // setchanel
    if (commandName === "setchanel") {
      const channel = options.getChannel("channel");
      config[guildId].privateChannel = channel.id;
      saveConfig();
      await interaction.reply({ content: `тЬЕ р╕Хр╕▒р╣Йр╕Зр╕Др╣Ир╕▓р╕Кр╣Ир╕нр╕Зр╕кр╕гр╕╕р╕Ыр╕Вр╣Йр╕нр╕бр╕╣р╕ер╣Ар╕Ыр╣Зр╕Щ ${channel}`, ephemeral: true });
    }

    // setmessage
    if (commandName === "setmessage") {
      const channel = options.getChannel("channel");
      const messageText = options.getString("message");
      const formUrl = options.getString("url") || DEFAULT_URL;
      const imageUrl = options.getString("image");
      const color = options.getString("color") || "#FFD700";

      const embed = new EmbedBuilder()
        .setTitle("ЁЯУЛ р╕ер╕Зр╕Чр╕░р╣Ар╕Ър╕╡р╕вр╕Щр╕Хр╕▒р╕зр╕ер╕░р╕Др╕г")
        .setDescription(messageText)
        .setColor(color);
      if (imageUrl) embed.setImage(imageUrl);

      const button = new ActionRowBuilder().addComponents(
        new ButtonBuilder()
          .setLabel("ЁЯФЧ р╕Бр╕гр╕нр╕Бр╕Яр╕нр╕гр╣Мр╕бр╕Чр╕╡р╣Ир╕Щр╕╡р╣И")
          .setStyle(ButtonStyle.Link)
          .setURL(formUrl)
      );

      await channel.send({ embeds: [embed], components: [button] });

      config[guildId].embedImage = imageUrl;
      config[guildId].embedColor = color;
      saveConfig();

      await interaction.reply({ content: `тЬЕ р╕кр╣Ир╕Зр╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╕Ыр╕гр╕░р╕Бр╕▓р╕ир╣Ар╕гр╕╡р╕вр╕Ър╕гр╣Йр╕нр╕вр╕Чр╕╡р╣И ${channel}`, ephemeral: true });
    }

    // setrole
    if (commandName === "setrole") {
      const role = options.getRole("role");
      config[guildId].roleToGive = role.id; // р╕Ър╕▒р╕Щр╕Чр╕╢р╕Бр╣Ар╕Ыр╣Зр╕Щ ID
      saveConfig();
      await interaction.reply({ content: `тЬЕ р╕Хр╕▒р╣Йр╕З role р╕Чр╕╡р╣Ир╕Ир╕░р╕бр╕нр╕Ър╕лр╕ер╕▒р╕Зр╕Бр╕гр╕нр╕Бр╕Яр╕нр╕гр╣Мр╕бр╣Ар╕Ыр╣Зр╕Щ: ${role.name}`, ephemeral: true });
    }

    // clearsetting
    if (commandName === "clearsetting") {
      config[guildId] = { privateChannel: null, roleToGive: null, embedImage: null, embedColor: "#FFD700" };
      saveConfig();
      await interaction.reply({ content: "ЁЯз╣ р╕ер╣Йр╕▓р╕Зр╕Др╣Ир╕▓р╕Бр╕▓р╕гр╕Хр╕▒р╣Йр╕Зр╕Др╣Ир╕▓р╕Вр╕нр╕З server р╕Щр╕╡р╣Йр╣Ар╕гр╕╡р╕вр╕Ър╕гр╣Йр╕нр╕в!", ephemeral: true });
    }
  } catch (err) {
    console.error("тЭМ Error:", err);
    await interaction.reply({ content: "тЭМ р╣Ар╕Бр╕┤р╕Фр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Ф!", ephemeral: true });
  }
});

// ЁЯМР р╕гр╕▒р╕Ър╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Яр╕нр╕гр╣Мр╕б
app.post("/submit", async (req, res) => {
  try {
    const data = req.body;
    const targetGuildId = Object.keys(config)[0]; // р╣Гр╕Кр╣Йр╣Ар╕Лр╕┤р╕гр╣Мр╕Яр╣Ар╕зр╕нр╕гр╣Мр╣Бр╕гр╕Б
    if (!targetGuildId) return res.status(400).send("тЭМ р╣Др╕бр╣Ир╕Юр╕Ър╣Ар╕Лр╕┤р╕гр╣Мр╕Яр╣Ар╕зр╕нр╕гр╣М");

    const channelId = config[targetGuildId].privateChannel;
    if (!channelId) return res.status(400).send("тЭМ р╕вр╕▒р╕Зр╣Др╕бр╣Ир╣Др╕Фр╣Йр╕Хр╕▒р╣Йр╕Зр╕Др╣Ир╕▓р╕Кр╣Ир╕нр╕Зр╕кр╕гр╕╕р╕Ы");

    const channel = await client.channels.fetch(channelId).catch(() => null);
    if (!channel) return res.status(404).send("тЭМ р╣Др╕бр╣Ир╕Юр╕Ър╕Кр╣Ир╕нр╕Зр╕Чр╕╡р╣Ир╕Хр╕▒р╣Йр╕Зр╣Др╕зр╣Й");

    const embed = new EmbedBuilder()
      .setTitle("ЁЯУЭ р╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Бр╕▓р╕гр╕ер╕Зр╕Чр╕░р╣Ар╕Ър╕╡р╕вр╕Щр╕Хр╕▒р╕зр╕ер╕░р╕Др╕гр╣Гр╕лр╕бр╣И")
      .setColor(config[targetGuildId].embedColor || "#A020F0")
      .addFields(
        { name: "р╕Кр╕╖р╣Ир╕н OC", value: data.oc_name || "р╣Др╕бр╣Ир╕гр╕░р╕Ър╕╕", inline: true },
        { name: "р╕нр╕▓р╕вр╕╕ OC", value: data.oc_age || "р╣Др╕бр╣Ир╕гр╕░р╕Ър╕╕", inline: true },
        { name: "р╕Кр╕╖р╣Ир╕н IC", value: data.ic_name || "р╣Др╕бр╣Ир╕гр╕░р╕Ър╕╕", inline: true },
        { name: "р╕нр╕▓р╕вр╕╕ IC", value: data.ic_age || "р╣Др╕бр╣Ир╕гр╕░р╕Ър╕╕", inline: true },
        { name: "р╕кр╣Ир╕зр╕Щр╕кр╕╣р╕З IC", value: data.ic_height || "р╣Др╕бр╣Ир╕гр╕░р╕Ър╕╕", inline: true },
        { name: "р╕кр╕▓р╕вр╕Юр╕▒р╕Щр╕Шр╕╕р╣М", value: data.species || "р╣Др╕бр╣Ир╕гр╕░р╕Ър╕╕", inline: true },
        { name: "Discord", value: data.discord_user || "р╣Др╕бр╣Ир╕гр╕░р╕Ър╕╕", inline: true },
        { name: "р╕Ыр╕гр╕░р╕зр╕▒р╕Хр╕┤ IC", value: data.ic_history || "р╣Др╕бр╣Ир╕гр╕░р╕Ър╕╕" }
      )
      .setTimestamp();

    if (config[targetGuildId].embedImage) embed.setImage(config[targetGuildId].embedImage);

    await channel.send({ embeds: [embed] });

    // ЁЯОЦя╕П р╕бр╕нр╕Ъ role р╕нр╕▒р╕Хр╣Вр╕Щр╕бр╕▒р╕Хр╕┤
    if (config[targetGuildId].roleToGive && data.discord_id) {
      const guild = await client.guilds.fetch(targetGuildId);
      await guild.members.fetch();

      const member = guild.members.cache.get(data.discord_id);
      if (member) {
        const role = guild.roles.cache.get(config[targetGuildId].roleToGive);
        if (role && !member.roles.cache.has(role.id)) {
          await member.roles.add(role);
          console.log(`ЁЯОЦя╕П р╣Гр╕лр╣Й role ${role.name} р╣Бр╕Бр╣И ${member.user.tag}`);
        }
      }
    }

    res.send({ status: "ok" });
  } catch (err) {
    console.error("тЭМ Error /submit:", err);
    res.status(500).send({ status: "error", error: err.message });
  }
});

// ЁЯМР Start API
app.listen(3000, () => console.log("ЁЯМР Web API р╕гр╕▒р╕Щр╕Чр╕╡р╣Ир╕Юр╕нр╕гр╣Мр╕Х 3000"));