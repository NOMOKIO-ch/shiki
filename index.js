import dotenv from "dotenv";
dotenv.config();

import fs from "fs";
import {
  Client,
  GatewayIntentBits,
  REST,
  Routes,
  SlashCommandBuilder,
  EmbedBuilder,
  ButtonBuilder,
  ButtonStyle,
  ActionRowBuilder,
} from "discord.js";
import express from "express";
import cors from "cors";

// ЁЯМР Express
const app = express();
app.use(cors());
app.use(express.json());

// ЁЯдЦ Discord Client
const client = new Client({
  intents: [GatewayIntentBits.Guilds, GatewayIntentBits.GuildMembers],
});

// ЁЯУВ Config File
const CONFIG_FILE = "./config.json";
const DEFAULT_URL = "https://roleplayfrom.vercel.app/";

let config = fs.existsSync(CONFIG_FILE)
  ? JSON.parse(fs.readFileSync(CONFIG_FILE, "utf8"))
  : {}; // per server

function saveConfig() {
  fs.writeFileSync(CONFIG_FILE, JSON.stringify(config, null, 2));
}

// ЁЯОп р╕Ър╕нр╕Чр╕нр╕нр╕Щр╣Др╕ер╕Щр╣М
client.once("ready", () => {
  console.log(`тЬЕ р╕Ър╕нр╕Чр╕нр╕нр╕Щр╣Др╕ер╕Щр╣Мр╣Бр╕ер╣Йр╕зр╣Гр╕Щр╕Кр╕╖р╣Ир╕н ${client.user.tag}`);
});

// ЁЯФС login р╕Юр╕гр╣Йр╕нр╕бр╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ъ error
client.login(process.env.BOT_TOKEN)
  .then(() => console.log("тЬЕ р╕Ър╕нр╕Ч login р╕кр╕│р╣Ар╕гр╣Зр╕И"))
  .catch(err => console.error("тЭМ р╕Ър╕нр╕Ч login р╣Др╕бр╣Ир╕кр╕│р╣Ар╕гр╣Зр╕И:", err));

// ЁЯзй р╕ер╕Зр╕Чр╕░р╣Ар╕Ър╕╡р╕вр╕Щр╕Др╕│р╕кр╕▒р╣Ир╕З
const commands = [
  new SlashCommandBuilder()
    .setName("setchanel")
    .setDescription("р╕Хр╕▒р╣Йр╕Зр╕Др╣Ир╕▓р╕Кр╣Ир╕нр╕Зр╕кр╕│р╕лр╕гр╕▒р╕Ър╕кр╕гр╕╕р╕Ыр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Яр╕нр╕гр╣Мр╕б")
    .addChannelOption(opt => opt.setName("channel").setDescription("р╕Кр╣Ир╕нр╕Зр╕кр╕│р╕лр╕гр╕▒р╕Ър╕кр╕гр╕╕р╕Ы").setRequired(true))
    .toJSON(),

  new SlashCommandBuilder()
    .setName("setmessage")
    .setDescription("р╕Хр╕▒р╣Йр╕Зр╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╕Ыр╕гр╕░р╕Бр╕▓р╕ир╕Юр╕гр╣Йр╕нр╕бр╕Ыр╕╕р╣Ир╕бр╕Яр╕нр╕гр╣Мр╕б")
    .addChannelOption(opt => opt.setName("channel").setDescription("р╕Кр╣Ир╕нр╕Зр╕Чр╕╡р╣Ир╕Ир╕░р╕Ыр╕гр╕░р╕Бр╕▓р╕и").setRequired(true))
    .addStringOption(opt => opt.setName("message").setDescription("р╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╕Ыр╕гр╕░р╕Бр╕▓р╕и").setRequired(true))
    .addStringOption(opt => opt.setName("url").setDescription("р╕ер╕┤р╕Зр╕Бр╣Мр╕Яр╕нр╕гр╣Мр╕б (р╕Цр╣Йр╕▓р╣Др╕бр╣Ир╣Гр╕кр╣Ир╕Ир╕░р╣Гр╕Кр╣Й default)"))
    .addStringOption(opt => opt.setName("image").setDescription("р╕ер╕┤р╕Зр╕Бр╣Мр╕гр╕╣р╕Ыр╕лр╕гр╕╖р╕н GIF"))
    .addStringOption(opt => opt.setName("color").setDescription("р╕кр╕╡ embed р╣Ар╕Кр╣Ир╕Щ #ff0000"))
    .toJSON(),

  new SlashCommandBuilder()
    .setName("serverid")
    .setDescription("р╕Хр╕▒р╣Йр╕З Server ID р╕Вр╕нр╕Зр╕Ър╕нр╕Ч")
    .addStringOption(opt => opt.setName("server_id").setDescription("Server ID").setRequired(true))
    .toJSON(),

  new SlashCommandBuilder()
    .setName("setrole")
    .setDescription("р╕Хр╕▒р╣Йр╕З role р╕Чр╕╡р╣Ир╕Ир╕░р╣Гр╕лр╣Йр╕лр╕ер╕▒р╕Зр╕Бр╕гр╕нр╕Бр╕Яр╕нр╕гр╣Мр╕б")
    .addStringOption(opt => opt.setName("role_name").setDescription("р╕Кр╕╖р╣Ир╕н role").setRequired(true))
    .toJSON(),

  new SlashCommandBuilder()
    .setName("clearsetting")
    .setDescription("р╕ер╣Йр╕▓р╕Зр╕Др╣Ир╕▓р╕Бр╕▓р╕гр╕Хр╕▒р╣Йр╕Зр╕Др╣Ир╕▓р╕Вр╕нр╕З server р╕Щр╕╡р╣Й")
    .toJSON(),
];

const rest = new REST({ version: "10" }).setToken(process.env.BOT_TOKEN);
(async () => {
  try {
    console.log("ЁЯФД р╕Бр╕│р╕ер╕▒р╕Зр╕ер╕Зр╕Чр╕░р╣Ар╕Ър╕╡р╕вр╕Щр╕Др╕│р╕кр╕▒р╣Ир╕З...");
    await rest.put(Routes.applicationCommands(process.env.CLIENT_ID), { body: commands });
    console.log("тЬЕ р╕ер╕Зр╕Чр╕░р╣Ар╕Ър╕╡р╕вр╕Щр╕Др╕│р╕кр╕▒р╣Ир╕Зр╣Бр╕ер╣Йр╕з!");
  } catch (err) {
    console.error("тЭМ р╕ер╕Зр╕Чр╕░р╣Ар╕Ър╕╡р╕вр╕Щр╕Др╕│р╕кр╕▒р╣Ир╕Зр╕ер╣Йр╕бр╣Ар╕лр╕ер╕з:", err);
  }
})();

// ЁЯОо Interaction Commands
client.on("interactionCreate", async (interaction) => {
  if (!interaction.isChatInputCommand()) return;
  const { commandName, options, guildId } = interaction;

  if (!config[guildId]) config[guildId] = { privateChannel: null, roleToGive: null, embedImage: null, embedColor: "#FFD700", serverID: guildId };

  try {
    // /setchanel
    if (commandName === "setchanel") {
      const channel = options.getChannel("channel");
      config[guildId].privateChannel = channel.id;
      saveConfig();
      await interaction.reply({ content: `тЬЕ р╕Хр╕▒р╣Йр╕Зр╕Др╣Ир╕▓р╕Кр╣Ир╕нр╕Зр╕кр╕гр╕╕р╕Ыр╕Вр╣Йр╕нр╕бр╕╣р╕ер╣Ар╕Ыр╣Зр╕Щ ${channel}`, ephemeral: true });
    }

    // /setmessage
    if (commandName === "setmessage") {
      const channel = options.getChannel("channel");
      const messageText = options.getString("message");
      const formUrl = options.getString("url") || DEFAULT_URL;
      const imageUrl = options.getString("image");
      const color = options.getString("color") || "#FFD700";

      const embed = new EmbedBuilder()
        .setTitle("ЁЯУЛ р╕ер╕Зр╕Чр╕░р╣Ар╕Ър╕╡р╕вр╕Щр╕Хр╕▒р╕зр╕ер╕░р╕Др╕г")
        .setDescription(messageText)
        .setColor(color);
      if (imageUrl) embed.setImage(imageUrl);

      const button = new ActionRowBuilder().addComponents(
        new ButtonBuilder().setLabel("ЁЯФЧ р╕Бр╕гр╕нр╕Бр╕Яр╕нр╕гр╣Мр╕бр╕Чр╕╡р╣Ир╕Щр╕╡р╣И").setStyle(ButtonStyle.Link).setURL(formUrl)
      );

      await channel.send({ embeds: [embed], components: [button] });

      config[guildId].embedImage = imageUrl;
      config[guildId].embedColor = color;
      saveConfig();

      await interaction.reply({ content: `тЬЕ р╕кр╣Ир╕Зр╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╕Ыр╕гр╕░р╕Бр╕▓р╕ир╣Ар╕гр╕╡р╕вр╕Ър╕гр╣Йр╕нр╕вр╕Чр╕╡р╣И ${channel}`, ephemeral: true });
    }

    // /serverid
    if (commandName === "serverid") {
      const server_id = options.getString("server_id");
      config[guildId].serverID = server_id;
      saveConfig();
      await interaction.reply({ content: `тЬЕ р╕Хр╕▒р╣Йр╕З Server ID р╣Ар╕Ыр╣Зр╕Щ: ${server_id}`, ephemeral: true });
    }

    // /setrole
    if (commandName === "setrole") {
      const roleName = options.getString("role_name");
      config[guildId].roleToGive = roleName;
      saveConfig();
      await interaction.reply({ content: `тЬЕ р╕Хр╕▒р╣Йр╕З role р╕Чр╕╡р╣Ир╕Ир╕░р╕бр╕нр╕Ър╕лр╕ер╕▒р╕Зр╕Бр╕гр╕нр╕Бр╕Яр╕нр╕гр╣Мр╕бр╣Ар╕Ыр╣Зр╕Щ: ${roleName}`, ephemeral: true });
    }

    // /clearsetting
    if (commandName === "clearsetting") {
      config[guildId] = { privateChannel: null, roleToGive: null, embedImage: null, embedColor: "#FFD700", serverID: guildId };
      saveConfig();
      await interaction.reply({ content: "ЁЯз╣ р╕ер╣Йр╕▓р╕Зр╕Др╣Ир╕▓р╕Бр╕▓р╕гр╕Хр╕▒р╣Йр╕Зр╕Др╣Ир╕▓р╕Вр╕нр╕З server р╕Щр╕╡р╣Йр╣Ар╕гр╕╡р╕вр╕Ър╕гр╣Йр╕нр╕в!", ephemeral: true });
    }
  } catch (err) {
    console.error("тЭМ р╣Ар╕Бр╕┤р╕Фр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Фр╣Гр╕Щр╕Др╕│р╕кр╕▒р╣Ир╕З:", err);
    await interaction.reply({ content: "тЭМ р╣Ар╕Бр╕┤р╕Фр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Ф! р╣Вр╕Ыр╕гр╕Фр╕ер╕нр╕Зр╕нр╕╡р╕Бр╕Др╕гр╕▒р╣Йр╕З", ephemeral: true });
  }
});

// ЁЯМР р╕гр╕▒р╕Ър╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Ир╕▓р╕Бр╕Яр╕нр╕гр╣Мр╕б
app.post("/submit", async (req, res) => {
  try {
    const data = req.body;
    const guildId = data.server_id;
    if (!guildId || !config[guildId] || !config[guildId].privateChannel) return res.status(400).send("р╕вр╕▒р╕Зр╣Др╕бр╣Ир╣Др╕Фр╣Йр╕Хр╕▒р╣Йр╕Зр╕Др╣Ир╕▓р╕Кр╣Ир╕нр╕Зр╕кр╕гр╕╕р╕Ыр╕лр╕гр╕╖р╕н server_id!");

    const channel = await client.channels.fetch(config[guildId].privateChannel);
    if (!channel) return res.status(404).send("р╣Др╕бр╣Ир╕Юр╕Ър╕Кр╣Ир╕нр╕З!");

    // ЁЯУЭ embed р╕кр╕гр╕╕р╕Ыр╕Вр╣Йр╕нр╕бр╕╣р╕е
    const embed = new EmbedBuilder()
      .setTitle("ЁЯУЭ р╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Бр╕▓р╕гр╕ер╕Зр╕Чр╕░р╣Ар╕Ър╕╡р╕вр╕Щр╕Хр╕▒р╕зр╕ер╕░р╕Др╕гр╣Гр╕лр╕бр╣И")
      .setColor(config[guildId].embedColor || "#A020F0")
      .addFields(
        { name: "р╕Кр╕╖р╣Ир╕н OC", value: data.oc_name || "р╣Др╕бр╣Ир╕гр╕░р╕Ър╕╕", inline: true },
        { name: "р╕нр╕▓р╕вр╕╕ OC", value: data.oc_age || "р╣Др╕бр╣Ир╕гр╕░р╕Ър╕╕", inline: true },
        { name: "р╕Кр╕╖р╣Ир╕н IC", value: data.ic_name || "р╣Др╕бр╣Ир╕гр╕░р╕Ър╕╕", inline: true },
        { name: "р╕нр╕▓р╕вр╕╕ IC", value: data.ic_age || "р╣Др╕бр╣Ир╕гр╕░р╕Ър╕╕", inline: true },
        { name: "р╕кр╣Ир╕зр╕Щр╕кр╕╣р╕З IC", value: data.ic_height || "р╣Др╕бр╣Ир╕гр╕░р╕Ър╕╕", inline: true },
        { name: "р╕кр╕▓р╕вр╕Юр╕▒р╕Щр╕Шр╕╕р╣М", value: data.species || "р╣Др╕бр╣Ир╕гр╕░р╕Ър╕╕", inline: true },
        { name: "Discord", value: data.discord_user || "р╣Др╕бр╣Ир╕гр╕░р╕Ър╕╕", inline: true },
        { name: "р╕Ыр╕гр╕░р╕зр╕▒р╕Хр╕┤ IC", value: data.ic_history || "р╣Др╕бр╣Ир╕гр╕░р╕Ър╕╕" }
      )
      .setTimestamp();

    if (config[guildId].embedImage) embed.setImage(config[guildId].embedImage);
    await channel.send({ embeds: [embed] });

    // ЁЯОЦя╕П р╣Гр╕лр╣Й role р╕нр╕▒р╕Хр╣Вр╕Щр╕бр╕▒р╕Хр╕┤
    if (config[guildId].roleToGive && (data.discord_user || data.discord_id)) {
      const guild = channel.guild;
      await guild.members.fetch();

      let member = null;

      if (data.discord_id) member = guild.members.cache.get(data.discord_id);
      if (!member && data.discord_user) {
        member = guild.members.cache.find(m =>
          m.user.tag.toLowerCase() === data.discord_user.toLowerCase() ||
          m.user.username.toLowerCase() === data.discord_user.toLowerCase()
        );
      }

      if (member) {
        const role = guild.roles.cache.find(r => r.name === config[guildId].roleToGive);
        if (role && !member.roles.cache.has(role.id)) {
          await member.roles.add(role);
          console.log(`ЁЯОЦя╕П р╣Гр╕лр╣Й role ${role.name} р╣Бр╕Бр╣И ${member.user.tag}`);
        }
      }
    }

    res.send({ status: "ok" });
  } catch (err) {
    console.error("тЭМ Error /submit:", err);
    res.status(500).send({ status: "error" });
  }
});

// ЁЯМР Web API
app.listen(3000, () => console.log("ЁЯМР Web API р╕гр╕▒р╕Щр╕Чр╕╡р╣Ир╕Юр╕нр╕гр╣Мр╕Х 3000"));